AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  app-sync-backend

Globals:
  Function:
    Timeout: 3
    Tracing: Active
    MemorySize: 256
    CodeUri: backend
    Architectures:
      - x86_64
    Runtime: nodejs20.x
    Environment:
      Variables:
        TABLE_NAME: !Ref Table
        NODE_OPTIONS: --enable-source-maps

Resources:
##########################################################################
#                              Dynamo Table                              #
########################################################################## 
  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
##########################################################################
#                           Serverless GraphQL AppSync                   #
##########################################################################     
  GQL:
    Type: AWS::Serverless::GraphQLApi
    Properties:
      ApiKeys:
        MyApiKey:
          Description: "My API Key"
      Auth:
        Type: AWS_LAMBDA
        LambdaAuthorizer:
          AuthorizerUri: !GetAtt AuthFunction.Arn
          IdentityValidationExpression: ".*"
          AuthorizerResultTtlInSeconds: 500
      SchemaUri: ./backend/src/graphql/schema.graphql
      DataSources:
        DynamoDb:
          TableDataSource:
            TableName: !Ref Table
            TableArn: !GetAtt Table.Arn
        Lambda:
          ApiProxyDataSource:
            FunctionArn: !GetAtt ApiProxyFunction.Arn
          EventPublisherLambdaDataSource:
            FunctionArn: !GetAtt EventPublisherFunction.Arn
      Functions:
        createStory:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: TableDataSource
          CodeUri: ./backend/src/graphql/resolvers/story/create-story.resolver.js
        getStory:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: TableDataSource
          CodeUri: ./backend/src/graphql/resolvers/story/get-story.resolver.js
        fetchStories:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: TableDataSource
          CodeUri: ./backend/src/graphql/resolvers/story/fetch-stories.resolver.js
        fetchStoryComments:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: TableDataSource
          CodeUri: ./backend/src/graphql/resolvers/story-comment/fetch-story-comments.resolver.js
        createStoryComment:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: TableDataSource
          CodeUri: ./backend/src/graphql/resolvers/story-comment/create-story-comment.resolver.js
        preCreateStoryComment:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: TableDataSource
          CodeUri: ./backend/src/graphql/resolvers/story-comment/pre-create-story-comment.resolver.js
        getUrlLambdaDataSource:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: ApiProxyDataSource
          CodeUri: ./backend/src/graphql/resolvers/url/get-url-lambda.resolver.js
        getUrlHttpDataSource:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: !GetAtt HttpApiDataSource.Name
          CodeUri: ./backend/src/graphql/resolvers/url/get-url-http-datasource.resolver.js
        publishStoryCreatedEvent:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: EventPublisherLambdaDataSource
          CodeUri: ./backend/src/graphql/resolvers/events/publish-story-created.resolver.js
        publishCommentCreatedEvent:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: EventPublisherLambdaDataSource
          CodeUri: ./backend/src/graphql/resolvers/events/publish-comment-created.resolver.js
      Resolvers:
        Mutation:
          createStory:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - createStory
              - publishStoryCreatedEvent
          createStoryComment:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - preCreateStoryComment
              - createStoryComment
              - publishCommentCreatedEvent
        Query:
          getStory:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - getStory
              - fetchStoryComments
          fetchStories:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - fetchStories
          getUrlLambdaDataSource:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - getUrlLambdaDataSource
          getUrlHttpDataSource:
            Runtime:  
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - getUrlHttpDataSource

##########################################################################
#                           AppSync Event API                            #
##########################################################################
  EventAPI:
    Type: AWS::AppSync::Api
    Properties:
      Name: GQL-EventAPI
      EventConfig:
        AuthProviders:
          - AuthType: API_KEY
        ConnectionAuthModes:
          - AuthType: API_KEY
        DefaultPublishAuthModes:
          - AuthType: API_KEY
        DefaultSubscribeAuthModes:
          - AuthType: API_KEY

  EventApiNameSpace:
    Type: AWS::AppSync::ChannelNamespace
    Properties:
      ApiId: !GetAtt EventAPI.ApiId
      Name: 'default'

  EventAPIKey:
    Type: AWS::AppSync::ApiKey
    Properties:
      ApiId: !GetAtt EventAPI.ApiId
      Description: API Key for Events API

##########################################################################
#                           Custom DataSource                            #
##########################################################################
  HttpApiDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt GQL.ApiId
      Name: "HttpApiDataSource"
      Type: HTTP
      HttpConfig:
        Endpoint: "https://coffee.alexflipnote.dev"

##########################################################################
#                           Lambda Functions                             #
##########################################################################
  ApiProxyFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: backend/
      Handler: api-proxy.apiProxyHandler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref Table
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - src/lambdas/api-proxy.ts
         
  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: backend/
      Handler: auth.authHandler
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - src/lambdas/auth.ts

  EventPublisherFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: backend/
      Handler: event-publisher.eventPublisherHandler
      Environment:
        Variables:
          EVENT_API_ENDPOINT: !Sub "https://${EventAPI.Dns.Http}/event"
          EVENT_API_KEY: !GetAtt EventAPIKey.ApiKey
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - appsync:PostToConnection
              Resource: 
                - !Sub "arn:aws:appsync:${AWS::Region}:${AWS::AccountId}:apis/${EventAPI}/*"
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - src/lambdas/event-publisher.ts

##########################################################################
#                           Outputs                                      #
##########################################################################
Outputs:
  AppSyncGraphQLUrl:
    Description: "AppSync GraphQL URL"
    Value: !GetAtt GQL.GraphQLUrl
    
  EventApiHttpURL:
    Description: "AppSync Event API HTTP URL"
    Value: !Sub "https://${EventAPI.Dns.Http}/event"
    
  EventApiWebSocketURL:
    Description: "AppSync Event API WebSocket URL"
    Value: !Sub "wss://${EventAPI.Dns.Http}/event/realtime"
    
  EventApiKey:
    Description: "AppSync Event API Key"
    Value: !GetAtt EventAPIKey.ApiKey
    
  EventApiId:
    Description: "AppSync Event API ID"
    Value: !Ref EventAPI

